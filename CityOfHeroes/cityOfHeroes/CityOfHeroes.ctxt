#BlueJ class context
comment0.target=CityOfHeroes
comment0.text=\r\n\ Representa\ la\ ciudad\ donde\ est\u00E1n\ ubicados\ los\ h\u00E9roes\ y\ los\ edificios.\r\n\ @author\ Juan\ Sebastian\ Fr\u00E1sica\ y\ Juan\ Sebasti\u00E1n\ G\u00F3mez\r\n
comment1.params=ancho\ largo
comment1.target=CityOfHeroes(int,\ int)
comment1.text=\r\n\ M\u00E9todo\ constructor\ de\ la\ clase\ \r\n\ @param\ ancho\ Ancho\ de\ la\ ciudad\r\n\ @param\ largo\ Largo\ (altura)\ de\ la\ ciudad\r\n
comment10.params=color
comment10.target=boolean\ getHeroBuilding(java.lang.String)
comment10.text=\r\n\ Verifica\ si\ existe\ un\ h\u00E9roe\r\n\ @return\ true\ si\ el\ heroe\ existe\r\n
comment11.params=color
comment11.target=Heroe\ searchHeroe(java.lang.String)
comment11.text=\r\n\ Busca\ a\ un\ heroe\ seg\u00FAn\ su\ color\r\n\ @param\ color\ Color\ del\ heroe\r\n\ @return\ Heroe\ buscado\r\n
comment12.params=heroe\ velocidad\ angulo\ slow
comment12.target=void\ jump(java.lang.String,\ int,\ int,\ boolean)
comment12.text=\r\n\ Realiza\ el\ salto\ del\ heroe\r\n\ @param\ heroe\ Heroe\ que\ va\ a\ saltar\r\n\ @param\ velocidad\ Velocidad\ a\ la\ que\ saltar\u00E1\ el\ h\u00E9roe\r\n\ @param\ angulo\ Angulo\ del\ salto\r\n\ @param\ slow\ Si\ va\ a\ ir\ despacio\r\n
comment13.params=hero
comment13.target=void\ moverAlCentro(Heroe)
comment13.text=\r\n\ Mueve\ al\ heroe\ al\ centro\ del\ edifico\ cuando\ este\ cae\ en\ la\ parte\ superior\ del\ edificio\ \ \ \r\n
comment14.params=x\ y\ hero\ slow
comment14.target=void\ mover(int,\ int,\ Heroe,\ boolean)
comment14.text=\r\n\ Se\ encarga\ de\ mover\ el\ heroe\ cuando\ este\ salta\r\n
comment15.params=y\ x\ e\ hero
comment15.target=boolean\ aSalvo(int,\ int,\ Edificio,\ Heroe)
comment15.text=\r\n\ Se\ encarga\ de\ revisar\ si\ el\ heroe\ llega\ a\ salvo\ del\ salto\r\n
comment16.params=hero
comment16.target=void\ eliminaHeroe(Heroe)
comment17.params=angulo
comment17.target=boolean\ validarAngulo(int)
comment17.text=\r\n\ Se\ encarga\ de\ verificar\ los\ angulos\ posibles\ para\ realizar\ el\ salto,\ y\ permite\ que\ se\ salte\ si\ se\ ingresan\ \u00E1ngulos\ negativos\r\n
comment18.params=heroe\ building
comment18.target=void\ jump(java.lang.String,\ int)
comment18.text=\r\n\ Realiza\ el\ salto\ del\ heroe\ hacia\ el\ edificio\ que\ se\ indique\r\n\ @param\ heroe\ Heroe\ que\ va\ a\ saltar\r\n\ @param\ building\ Edificio\ al\ que\ saltar\u00E1\ el\ h\u00E9roe\r\n
comment19.params=heroe
comment19.target=void\ jump(java.lang.String)
comment19.text=\r\n\ Realiza\ el\ "mejor"\ salto\ del\ heroe.\r\n\ El\ mejor\ salto\ del\ h\u00E9roe\ es\ que\ este\ salte\ al\ edificio\ m\u00E1s\ alto\r\n\ @param\ heroe\ Heroe\ que\ va\ a\ saltar\r\n
comment2.params=
comment2.target=void\ ordenEdificios()
comment2.text=\r\n\ Ordena\ los\ edificios\ para\ que\ el\ h\u00E9roe\ sea\ agregado\ al\ edificio\ con\ esa\ posici\u00F3n,\ contando\ de\ izquierda\ a\ derecha\r\n\ Insertion\ sort\r\n
comment20.params=
comment20.target=int\ masAlto()
comment20.text=\r\n\ Revisa\ cual\ es\ el\ edificio\ mas\ alto\ de\ la\ ciudad\r\n\ @return\ Posici\u00F3n\ en\ el\ que\ esta\ el\ edificio\ mas\ alto\ de\ la\ ciudad\r\n
comment21.params=heroe\ edificio
comment21.target=int[]\ jumpPlan(java.lang.String,\ int)
comment21.text=\r\n\ Planea\ un\ buen\ salto\r\n\ @param\ heroe\ Heroe\ que\ saltar\u00E1\r\n\ @param\ edificio\ Edificio\ al\ que\ saltar\u00E1\ el\ h\u00E9roe\r\n\ @return\ Velocidad\ y\ angulo\ para\ dar\ un\ buen\ salto\r\n
comment22.params=heroe\ edificio\ v
comment22.target=boolean\ jumpPlan(java.lang.String,\ int,\ int)
comment23.params=x\ y\ grados\ x0\ y0
comment23.target=int\ velDeAngulo(int,\ int,\ int,\ int,\ int)
comment23.text=\r\n\ Retorna\ una\ velocidad\ a\ partir\ de\ un\ angulo\ y\ una\ coordenada\ en\ el\ plano\r\n\ @param\ x\ coordenada\ en\ x\r\n\ @param\ y\ coordenada\ en\ y\r\n\ @param\ grados\ Angulo\ en\ grados\r\n\ @return\ Velocidad\ positiva(Si\ es\ negativa\ significa\ que\ no\ es\ posible\ llegar\ a\ ese\ punto)\r\n
comment24.params=posicion
comment24.target=boolean\ isDamaged(int)
comment24.text=\r\n\ Verifica\ si\ un\ edificio\ est\u00E1\ da\u00F1ado\r\n\ @param\ posicion\ Posicion\ del\ edificio\r\n\ @return\ true\ si\ el\ edificio\ est\u00E1\ da\u00F1ado,\ false\ de\ lo\ contrario\r\n
comment25.params=heroe\ velocidad\ angulo
comment25.target=boolean\ isSafeJump(java.lang.String,\ int,\ int)
comment25.text=\r\n\ Verifica\ si\ un\ salto\ es\ seguro\r\n\ @param\ heroe\ Heroe\ que\ va\ a\ saltar\r\n\ @param\ velocidad\ Velocidad\ a\ la\ que\ saltar\u00E1\ el\ h\u00E9roe\r\n\ @param\ angulo\ Angulo\ del\ salto\r\n\ @return\ true\ si\ en\ el\ salto\ el\ heroe\ no\ se\ estrella,\ false\ de\ lo\ contrario\r\n
comment26.params=y\ x\ e\ hero
comment26.target=boolean\ isSave(int,\ int,\ Edificio,\ Heroe)
comment27.params=y\ x\ e\ hero\ xFinal
comment27.target=boolean\ isSave(int,\ int,\ Edificio,\ Heroe,\ int)
comment28.params=heroe\ velocidad\ angulo\ xFinal
comment28.target=boolean\ isSafeJump(java.lang.String,\ int,\ int,\ int)
comment28.text=\r\n\ Verifica\ si\ un\ salto\ es\ seguro\ y\ llega\ a\ un\ xFinal\ determinado\ \r\n\ @param\ heroe\ Heroe\ que\ va\ a\ saltar\r\n\ @param\ velocidad\ Velocidad\ a\ la\ que\ saltar\u00E1\ el\ h\u00E9roe\r\n\ @param\ angulo\ Angulo\ del\ salto\r\n\ @return\ true\ si\ en\ el\ salto\ el\ heroe\ no\ se\ estrella,\ false\ de\ lo\ contrario\r\n
comment29.params=heroe\ building
comment29.target=boolean\ isSafeJump(java.lang.String,\ int)
comment29.text=\r\n\ Verifica\ si\ un\ salto\ es\ seguro\r\n\ @param\ heroe\ Heroe\ que\ va\ a\ saltar\r\n\ @param\ edificio\ Edificio\ al\ que\ va\ a\ saltar\ el\ h\u00E9roe\r\n\ @return\ true\ si\ en\ el\ salto\ el\ heroe\ no\ se\ estrella,\ false\ de\ lo\ contrario\r\n
comment3.params=x\ ancho\ largo\ dureza
comment3.target=void\ addBuilding(int,\ int,\ int,\ int)
comment3.text=\r\n\ Agrega\ un\ edificio\ en\ la\ ciudad\r\n\ Para\ adicionar\ un\ edificio\ es\ necesario\ que\ la\ ciudad\ tenga\ libre\ el\ espacio\ que\ el\ edificio\ requiere.\r\n\ La\ dureza\ del\ edificio\ debe\ ser\ entre\ 0\ y\ 100\r\n\ @param\ x\ La\ posici\u00F3n\ en\ x\ en\ el\ plano\ cartesiano\ donde\ se\ dibujar\u00E1\ el\ edificio\r\n\ @param\ ancho\ El\ ancho\ del\ edificio\r\n\ @param\ largo\ El\ largo\ del\ edificio\r\n\ @param\ dureza\ Dureza\ o\ fortaleza\ del\ edificio\r\n
comment30.params=
comment30.target=int[][][]\ city()
comment30.text=\r\n\ Retorna\ un\ vector\ con\ la\ informaci\u00F3n\ de\ los\ edificios\ y\ heroes\ de\ la\ ciudad\r\n\ @return\ Retorna\ un\ vector\ con\ dos\ vectores.\ El\ primero\ con\ la\ informaci\u00F3n\ de\ los\ edificios\ [x,ancho,\ alto,\ dureza]\ ordenado\ por\ posici\u00F3n\ en\ x.\ \r\n\ El\ segundo\ con\ la\ informaci\u00F3n\ de\ los\ heroes\ [edificio,\ fortaleza]\ ordenado\ por\ el\ n\u00FAmero\ de\ edificio.\r\n
comment31.params=posicion
comment31.target=void\ removeBuilding(int)
comment31.text=\r\n\ Elimina\ un\ edificio\ seg\u00FAn\ la\ posici\u00F3n\ que\ se\ indique\ \r\n\ La\ posicion\ inicia\ desde\ el\ edificio\ \#1\r\n\ @param\ posicion\ Posicion\ del\ edificio\r\n
comment32.params=s
comment32.target=void\ addParametros(int[])
comment33.params=s\ h
comment33.target=void\ addParametros(java.lang.String,\ int[])
comment34.params=color
comment34.target=void\ removeHeroe(java.lang.String)
comment34.text=\r\n\ Elimina\ el\ h\u00E9roe\ seg\u00FAn\ su\ color\r\n\ @param\ color\ Color\ del\ h\u00E9roe\r\n
comment35.params=color
comment35.target=int\ strength(java.lang.String)
comment35.text=\r\n\ Retorna\ la\ fuerza\ del\ h\u00E9roe\ seg\u00FAn\ su\ color\r\n\ @param\ color\ Color\ del\ h\u00E9roe\r\n
comment36.params=
comment36.target=void\ makeVisible()
comment36.text=\r\n\ Hace\ visible\ el\ simulador\ (la\ ciudad)\r\n
comment37.params=
comment37.target=void\ makeInvisible()
comment37.text=\r\n\ Hace\ invisible\ el\ simulador\ (la\ ciudad)\r\n
comment38.params=
comment38.target=void\ redo()
comment38.text=\r\n\ Rehace\ la\ \u00FAltima\ accion\ realizada\r\n
comment39.params=
comment39.target=void\ undo()
comment39.text=\r\n\ Deshace\ la\ \u00FAltima\ accion\ realizada\r\n
comment4.params=tipo\ x\ ancho\ largo\ dureza
comment4.target=void\ addBuilding(java.lang.String,\ int,\ int,\ int,\ int)
comment4.text=\r\n\ Agrega\ un\ edificio\ en\ la\ ciudad\r\n\ Para\ adicionar\ un\ edificio\ es\ necesario\ que\ la\ ciudad\ tenga\ libre\ el\ espacio\ que\ el\ edificio\ requiere.\r\n\ La\ dureza\ del\ edificio\ debe\ ser\ entre\ 0\ y\ 100\r\n\ @param\ x\ La\ posici\u00F3n\ en\ x\ en\ el\ plano\ cartesiano\ donde\ se\ dibujar\u00E1\ el\ edificio\r\n\ @param\ ancho\ El\ ancho\ del\ edificio\r\n\ @param\ largo\ El\ largo\ del\ edificio\r\n\ @param\ dureza\ Dureza\ o\ fortaleza\ del\ edificio\r\n\ @param\ tipo\ Tipo\ de\ edificio\ (\r\n
comment40.params=z
comment40.target=void\ zoom(char)
comment40.text=\r\n\ Agranda\ o\ achica\ la\ pantalla\ dependiendo\ del\ caracter\ que\ se\ le\ ingrese\r\n\ @param\ z\ (+)\ Para\ agrandar\ la\ ciudad.\ (-)\ Para\ achicar\ la\ ciudad\r\n
comment41.params=
comment41.target=void\ finish()
comment41.text=\r\n\ Finaliza\ el\ simulador\r\n
comment42.params=s
comment42.target=void\ alerta(java.lang.String)
comment43.params=
comment43.target=boolean\ ok()
comment43.text=\r\n\ Retorna\ si\ la\ \u00FAltima\ operaci\u00F3n\ se\ pudo\ realizar\ o\ no\r\n\ @return\ true\ si\ la\ ultima\ operaci\u00F3n\ se\ logr\u00F3\ realizar,\ de\ lo\ contrario\:\ false\r\n
comment5.params=tipo\ x\ ancho\ largo\ dureza
comment5.target=void\ a\u00F1adirEdificio(java.lang.String,\ int,\ int,\ int,\ int)
comment5.text=\r\n\ A\u00F1ade\ un\ edificio\ segun\ su\ tipo\:\ normal,\ radical,\ flexible\ o\ colorido\r\n
comment6.params=color\ edificioAparicion\ fuerza
comment6.target=void\ addHeroe(java.lang.String,\ int,\ int)
comment6.text=\r\n\ Agrega\ un\ h\u00E9roe\ a\ la\ ciudad\r\n\ Los\ heroes\ se\ identifican\ por\ su\ color.\ Solo\ puede\ haber\ un\ heroe\ de\ cada\ color.\r\n\ Solo\ hay\ 10\ colores\ permitidos,\ por\ lo\ que\ solo\ podr\u00E1n\ haber\ 10\ h\u00E9roes\r\n\ @param\ color\ Color\ que\ identifica\ al\ h\u00E9roe\r\n\ @param\ edificioAparicion\ Edificio\ donde\ aparecer\u00E1\ el\ heroe\r\n\ @param\ fuerza\ Fuerza\ del\ h\u00E9roe\r\n
comment7.params=tipo\ color\ edificioAparicion\ fuerza
comment7.target=void\ addHeroe(java.lang.String,\ java.lang.String,\ int,\ int)
comment7.text=\r\n\ Agrega\ un\ h\u00E9roe\ a\ la\ ciudad\r\n\ Los\ heroes\ se\ identifican\ por\ su\ color.\ Solo\ puede\ haber\ un\ heroe\ de\ cada\ color.\r\n\ Solo\ hay\ 10\ colores\ permitidos,\ por\ lo\ que\ solo\ podr\u00E1n\ haber\ 10\ h\u00E9roes\r\n\ @param\ color\ Color\ que\ identifica\ al\ h\u00E9roe\r\n\ @param\ edificioAparicion\ Edificio\ donde\ aparecer\u00E1\ el\ heroe\r\n\ @param\ fuerza\ Fuerza\ del\ h\u00E9roe\r\n
comment8.params=color\ edificioAparicion\ fuerza\ tipo
comment8.target=void\ a\u00F1adirHeroe(java.lang.String,\ int,\ int,\ java.lang.String)
comment9.params=
comment9.target=java.lang.String[]\ deads()
comment9.text=\r\n\ Retorna\ un\ ArrayList\ con\ los\ h\u00E9roes\ fallecidos\r\n\ @return\ H\u00E9roes\ muertos\r\n
numComments=44
